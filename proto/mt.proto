syntax = "proto3";

package mt;

service MT {
    // Getters
    rpc GetBalance(EthAddress) returns (Balance);
    rpc GetNonce(EthAddress) returns (Nonce);
    rpc GetCode(EthAddress) returns (Code);
    rpc GetCodeHash(EthAddress) returns (Hash);
    rpc GetStorageAt(GetStorageRequest) returns (StorageValue);
    rpc ReverseHash(Hash) returns (MTNode);
    // Setters
    rpc SetBalance(SetBalanceRequest) returns (SetResponse);
    rpc SetNonce(SetNonceRequest) returns (SetResponse);
    rpc SetCode(SetCodeRequest) returns (SetResponse);
    rpc SetCodeHash(SetCodeHashRequest) returns (SetResponse);
    rpc SetStorageAt(SetStorageAtRequest) returns (SetResponse);
    rpc SetHashValue(SetHashValueRequest) returns (SetResponse);
    rpc SetHashValueBulk(SetHashValueBulkRequest) returns (SetResponse);

    /*
    To be decided:
    - Is this service responsible for writing the MT nodes (SetBalance, SetNonce, ... vs just having SetHashValue)? Both things?
        * If so, we should add interface that allows updating the root in parallel (commit a bunch of leafs at once) 
    */
}

// Requests
message EthAddress {
    string eth_address = 1;
}
message GetStorageRequest {
    string eth_address = 1;
    uint64 position = 2;
}
message SetBalanceRequest {
    string eth_address = 1;
    string balance = 2;
}
message SetNonceRequest {
    string eth_address = 1;
    uint64 nonce = 2;
}
message SetCodeRequest {
    string eth_address = 1;
    string code = 2;
}
message SetCodeHashRequest {
    string eth_address = 1;
    string code_hash = 2;
}
message SetStorageAtRequest {
    string eth_address = 1;
    string value = 2;
}
message SetHashValueRequest {
    string hash = 1;
    string value = 2;
}
message SetHashValueBulkRequest {
    repeated SetHashValueRequest hash_values = 1;
}

// Responses
message Balance {
    string balance = 1;
}
message Nonce {
    uint64 nonce = 1; 
}
message StorageValue {
    string value = 1;
}
message Code {
    string code = 1;
}
message Hash {
    string hash = 1;
}
message MTNode {
    string node = 1;
}
message SetResponse {
    bool success = 1;
    string error_description = 2;
}